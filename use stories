User Stories for Epoch 2

1. I, as a user, would like to take my 13 coffee slurp sounds and randomly insert short clips of an audio into all of them at random times, 2~3 times per coffee slurp. 
2. I, as a user, have added my 20 sound files into the sound directory and would like to see them in alphabetical order. 
3. I, as a user, would like to be able to sort my sounds by date creation and date edited.
4. I, as a user, would like to hear what my sounds sound like when played backwards. 
5. I, as a user, would like to flag my favorite sounds and would like to see them at the top of my directory because theyâ€™re my favorite.
6. I, as a user, would like to randomize the volume of my sound as it plays. For example, I want it to be able to get louder/quieter throughout its playing
7. I, as a user, would like to blend two audio files so one audio file plays into another audio file, with simultaneous overlap.
8. I, as a user, would like to bass boost an audio file. 
9. I, as a user would like to normalize the volume of an audio file to a target amount of decibels.

Name: UC-#BassBoost
Summary: The audio of a file has its bass boosted.
Rationale: This would be funny.
Users: All users
Preconditions: A audio file is loaded.
Basic course of events: 1. Audio file loaded
                        2. User's flag would specify to boost the bass and the value by which to do it.
                        3. The audio track is played, with the new bass amount.
Alternate paths:        1. The user can exit playing, and since it is not permanent, it will revert to the precondition state.
Postconditions: This will not be permanent, to avoid changing the files themselves.

Name: UC-#NormalizeAudio
Summary: The audio levels will be normalized, meaning the volume will effect them all equally.
Rationale: This is a necessary quality of life addition.
Users: All users
Preconditions: A audio file is loaded.
Basic course of events: 1. Audio file loaded
                        2. The audio level would be set to a value pre-set into the python file or provided by the user.
                        3. The audio track is played
Alternate paths:        1. The user can exit playing, and since it is not permanent, it will revert to the precondition state.
Postconditions: This will not be permanent, to avoid changing the files themselves.


Name: Reverse 
Summary: Plays a selected audio file in reverse when applied
Rationale: A listener would want to listen to an audio file in reverse for a new listening experience. 
Users: All Users
Preconditions: A single, playable audio file has been loaded
Basic Course of Events: 
  1. The user selects their desired file
  2. The user then selects the 'reverse' option before playing the file
  3. When the user plays the file, the file is played in reverse
Alternative Paths: NA
Postconditions: File is no longer selected, and reverse is no longer applied to any files until selected again
